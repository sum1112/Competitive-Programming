import java.util.*;
import java.math.*;
import javafx.util.Pair;
public class Euler {
	
	public static void main(String[] args) {
		
		Scanner in = new Scanner(System.in);
		
		int n = in.nextInt();
		int m = in.nextInt();
		int x = in.nextInt();
		
		Map<Character, ArrayList<Pair<Integer,Integer>>> map = new HashMap<>();
		
		for (int i = 1; i <= n; i++) {
			
			String str = in.next();
			
			for (int j = 1; j <= m; j++) {
				
				char c = str.charAt(j - 1);
				
				ArrayList<Pair<Integer,Integer>> arr = map.get(c) == null ? new ArrayList<>() : map.get(c);
				
				arr.add(new Pair(i, j));
				
				map.put(c, arr);
				
			}
			
		}
		
		Map<Character,Integer> result = new HashMap<>();
		
		for (char c = 'a'; c <= 'z'; c++) {
			
			ArrayList<Pair<Integer,Integer>> arr = map.get(c);
			
			ArrayList<Pair<Integer,Integer>> shift = map.get('S');
			
			int temp = 0;
			
			int min = Integer.MAX_VALUE;
			
			if (shift != null && arr != null) {
			
			for (int i = 0; i < arr.size(); i++) {
				
				for (int j = 0; j < shift.size(); j++) {
					
					int x1 = arr.get(i).getKey();
					
					int y1 = arr.get(i).getValue();
					
					int x2 = shift.get(j).getKey();
					
					int y2 = shift.get(j).getValue();
					
					min = Math.min(min, (int) Math.ceil(Math.sqrt((x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2))));
					
				}
				
			}
			
			}
			
			if (min > x) temp = 1;
			
			result.put(c, temp);
			
		}
		
		int q = in.nextInt();
		
		String s = in.next();
		
		int f = 0;
		
		int i = 0;
		
		int sum = 0;
		
		while (q-- > 0) {
			
			char c = s.charAt(i);
			
			if ((map.get(c) == null && Character.isLowerCase(c)) || (Character.isUpperCase(c) && map.get(Character.toLowerCase(c)) == null) || (Character.isUpperCase(c) && map.get('S') == null)) {
				
				f = 1;
				
				break;
				
			} else if (Character.isUpperCase(c)){
				
				if (result.get(Character.toLowerCase(c)) != null) {
					
					sum += result.get(Character.toLowerCase(c));
					
				}
				
			}
			
		}
		
		if (f == 1) System.out.println("-1");
		
		else System.out.println(sum);
		
    }
    
}
