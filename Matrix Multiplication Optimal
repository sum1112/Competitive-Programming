import java.util.*;
import java.io.*;
import java.math.*;
public class Euler {
	
	
	public static void main(String[] args) {
		
		Scanner in = new Scanner(System.in);
		
		int [] p = {30, 35, 15, 5, 10, 20, 25};
		int n = 6;
		
		int[][] m = new int[n + 1][n + 1];
		int[][] s = new int[n + 1][n + 1];
		
		for (int i = 1; i <= n; i++) {
			for (int j = 1; j <= n; j++) {
				m[i][j] = Integer.MAX_VALUE;
			}
		}
		
		for (int i = 1; i <= n; i++) {
			m[i][i] = 0;
			//s[i][i] = i;
		}
		
		for (int l = 2; l <= n; l++) {
			
			for (int i = 1; i <= n - l + 1; i++) {
				
				int j = i + l - 1;
				
				for (int k = i; k < j; k++) {
					
					int x = m[i][j];
					
					m[i][j] = Math.min(m[i][j], m[i][k] + m[k + 1][j] + p[i - 1]* p[k] * p[j]);
					
					if (x != m[i][j]) s[i][j] = k;
					
				}
				
			}
			
		}
		
		recursion(s, 1, n);
		
		System.out.println("");
		
		for (int i = 1; i <= n; i++) {
			
			for (int j = 1; j <= n; j++) {
				
				System.out.print(s[i][j] + " ");
				
			}
			
			System.out.println();
			
		}
		
	}
	
	public static void recursion(int[][] s, int i, int j) {
		
		if (i == j) {System.out.print("A" + i + "");
			return;}
		
		else {
			
			System.out.print("(");
			recursion(s, i, s[i][j]);
			recursion(s, s[i][j] + 1, j);
			System.out.print(")");
			
		}
		
	}
	
}

RESULT: 
((A1(A2A3))((A4A5)A6))
0 1 1 3 3 3 
0 0 2 3 3 3 
0 0 0 3 3 3 
0 0 0 0 4 5 
0 0 0 0 0 5 
0 0 0 0 0 0 



