import java.util.*;
class Euler {
	static int[] directionX = new int[]{0, 0, -1};
	static int[] directionY = new int[]{-1, 1, 0};
	
	public static void main(String[] args) {
		
		Scanner in = new Scanner(System.in);
		int t = in.nextInt();
		while(t-- > 0) {
			String str = "IEHOVA#";
			int m = in.nextInt();
			int n = in.nextInt();
			int x = 0;
			int y = 0;
			char[][] arr = new char[m][n];
			for (int i = 0; i < m; i++) {
				for (int j = 0;j < n;j++) {
					arr[i][j] = in.next().charAt(0);
					if (arr[i][j] == '@') {
						x = i;
						y = j;
					}
				}
			}
			
			List<String> list = new ArrayList<>();
			dfs(arr, x, y, list, str);
			
			for (int i = 0; i < list.size(); i++) {
				
				System.out.print(list.get(i) + " ");
				
			}
			System.out.println();
		}
	}
	
	public static void dfs(char[][] arr, int i , int j, List<String> result, String str) {
		
	       if (j + 1 < arr[0].length) {
			   
			   if (str.length() > 0 && arr[i][j + 1] == str.charAt(0)) {
				   str = str.substring(1);
				   result.add("right");
				   dfs(arr, i , j + 1, result, str);
				   return;
			   }
			   
		   }
		   
		   if (j - 1 >= 0) {
			   
			   if (str.length() > 0 && arr[i][j - 1] == str.charAt(0)) {
				   str = str.substring(1);
				   result.add("left");
				   dfs(arr, i , j - 1, result, str);
				   return;
			   }
			   
		   }
		   
		   if (i - 1 >= 0) {
			   
			   if (str.length() > 0 && arr[i - 1][j] == str.charAt(0)) {
				   str = str.substring(1);
				   result.add("forth");
				   dfs(arr, i - 1 , j , result, str);
				   return;
			   } 
		   }
	}
}
